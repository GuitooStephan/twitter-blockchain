{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\n\nvar externals_1 = require(\"./externals\");\n\nvar internal_1 = require(\"./internal\");\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\n\n\nfunction bnToHex(value) {\n  return \"0x\".concat(value.toString(16));\n}\n\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\n\nfunction bnToUnpaddedBuffer(value) {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\n\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\n\nfunction bnToRlp(value) {\n  return bnToUnpaddedBuffer(value);\n}\n\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\n\nvar TypeOutput;\n\n(function (TypeOutput) {\n  TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n  TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n  TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n  TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\n\nfunction toType(input, outputType) {\n  if (input === null) {\n    return null;\n  }\n\n  if (input === undefined) {\n    return undefined;\n  }\n\n  if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n    throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n  }\n\n  var output = (0, bytes_1.toBuffer)(input);\n\n  if (outputType === TypeOutput.Buffer) {\n    return output;\n  } else if (outputType === TypeOutput.BN) {\n    return new externals_1.BN(output);\n  } else if (outputType === TypeOutput.Number) {\n    var bn = new externals_1.BN(output);\n    var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n\n    if (bn.gt(max)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n    }\n\n    return bn.toNumber();\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return \"0x\".concat(output.toString('hex'));\n  }\n}\n\nexports.toType = toType;","map":{"version":3,"mappings":"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","names":["bnToHex","value","toString","exports","bnToUnpaddedBuffer","toArrayLike","Buffer","bnToRlp","TypeOutput","toType","input","outputType","undefined","Error","Number","isSafeInteger","output","BN","externals_1","bn","max","MAX_SAFE_INTEGER","gt","toNumber"],"sourceRoot":"","sources":["../src/types.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}