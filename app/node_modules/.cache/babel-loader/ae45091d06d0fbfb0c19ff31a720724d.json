{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\n\nfunction checkError(method, error, params) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error;\n\n    if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n      return e.data;\n    }\n\n    logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n      error,\n      data: \"0x\"\n    });\n  }\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === \"string\") {\n    message = error.error.message;\n  } else if (typeof error.body === \"string\") {\n    message = error.body;\n  } else if (typeof error.responseText === \"string\") {\n    message = error.responseText;\n  }\n\n  message = (message || \"\").toLowerCase();\n  const transaction = params.transaction || params.signedTransaction; // \"insufficient funds for gas * price + value + cost(data)\"\n\n  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"nonce too low\"\n\n\n  if (message.match(/nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/replacement transaction underpriced/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"replacement transaction underpriced\"\n\n\n  if (message.match(/only replay-protected/)) {\n    logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    const error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n  constructor(constructorGuard, provider, addressOrIndex) {\n    logger.checkNew(new.target, JsonRpcSigner);\n    super();\n\n    if (constructorGuard !== _constructorGuard) {\n      throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n    }\n\n    defineReadOnly(this, \"provider\", provider);\n\n    if (addressOrIndex == null) {\n      addressOrIndex = 0;\n    }\n\n    if (typeof addressOrIndex === \"string\") {\n      defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n      defineReadOnly(this, \"_index\", null);\n    } else if (typeof addressOrIndex === \"number\") {\n      defineReadOnly(this, \"_index\", addressOrIndex);\n      defineReadOnly(this, \"_address\", null);\n    } else {\n      logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n    }\n  }\n\n  connect(provider) {\n    return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"connect\"\n    });\n  }\n\n  connectUnchecked() {\n    return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n  }\n\n  getAddress() {\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send(\"eth_accounts\", []).then(accounts => {\n      if (accounts.length <= this._index) {\n        logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress\"\n        });\n      }\n\n      return this.provider.formatter.address(accounts[this._index]);\n    });\n  }\n\n  sendUncheckedTransaction(transaction) {\n    transaction = shallowCopy(transaction);\n    const fromAddress = this.getAddress().then(address => {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n    // wishes to use this, it is easy to specify explicitly, otherwise\n    // we look it up for them.\n\n    if (transaction.gasLimit == null) {\n      const estimate = shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    if (transaction.to != null) {\n      transaction.to = Promise.resolve(transaction.to).then(to => __awaiter(this, void 0, void 0, function* () {\n        if (to == null) {\n          return null;\n        }\n\n        const address = yield this.provider.resolveName(to);\n\n        if (address == null) {\n          logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n        }\n\n        return address;\n      }));\n    }\n\n    return resolveProperties({\n      tx: resolveProperties(transaction),\n      sender: fromAddress\n    }).then(_ref => {\n      let {\n        tx,\n        sender\n      } = _ref;\n\n      if (tx.from != null) {\n        if (tx.from.toLowerCase() !== sender) {\n          logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n      } else {\n        tx.from = sender;\n      }\n\n      const hexTx = this.provider.constructor.hexlifyTransaction(tx, {\n        from: true\n      });\n      return this.provider.send(\"eth_sendTransaction\", [hexTx]).then(hash => {\n        return hash;\n      }, error => {\n        return checkError(\"sendTransaction\", error, hexTx);\n      });\n    });\n  }\n\n  signTransaction(transaction) {\n    return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"signTransaction\"\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // This cannot be mined any earlier than any recent block\n      const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval); // Send the transaction\n\n      const hash = yield this.sendUncheckedTransaction(transaction);\n\n      try {\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n          const tx = yield this.provider.getTransaction(hash);\n\n          if (tx === null) {\n            return undefined;\n          }\n\n          return this.provider._wrapTransaction(tx, hash, blockNumber);\n        }), {\n          oncePoll: this.provider\n        });\n      } catch (error) {\n        error.transactionHash = hash;\n        throw error;\n      }\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n    });\n  }\n\n  _legacySignMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = typeof message === \"string\" ? toUtf8Bytes(message) : message;\n      const address = yield this.getAddress(); // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\n      return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n    });\n  }\n\n  _signTypedData(domain, types, value) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Populate any ENS names (in-place)\n      const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, name => {\n        return this.provider.resolveName(name);\n      });\n      const address = yield this.getAddress();\n      return yield this.provider.send(\"eth_signTypedData_v4\", [address.toLowerCase(), JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);\n    });\n  }\n\n  unlock(password) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const provider = this.provider;\n      const address = yield this.getAddress();\n      return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n    });\n  }\n\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n  sendTransaction(transaction) {\n    return this.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n}\n\nconst allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true,\n  type: true,\n  accessList: true,\n  maxFeePerGas: true,\n  maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n  constructor(url, network) {\n    logger.checkNew(new.target, JsonRpcProvider);\n    let networkOrReady = network; // The network is unknown, query the JSON-RPC for it\n\n    if (networkOrReady == null) {\n      networkOrReady = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.detectNetwork().then(network => {\n            resolve(network);\n          }, error => {\n            reject(error);\n          });\n        }, 0);\n      });\n    }\n\n    super(networkOrReady); // Default URL\n\n    if (!url) {\n      url = getStatic(this.constructor, \"defaultUrl\")();\n    }\n\n    if (typeof url === \"string\") {\n      defineReadOnly(this, \"connection\", Object.freeze({\n        url: url\n      }));\n    } else {\n      defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n    }\n\n    this._nextId = 42;\n  }\n\n  get _cache() {\n    if (this._eventLoopCache == null) {\n      this._eventLoopCache = {};\n    }\n\n    return this._eventLoopCache;\n  }\n\n  static defaultUrl() {\n    return \"http:/\\/localhost:8545\";\n  }\n\n  detectNetwork() {\n    if (!this._cache[\"detectNetwork\"]) {\n      this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop\n\n      setTimeout(() => {\n        this._cache[\"detectNetwork\"] = null;\n      }, 0);\n    }\n\n    return this._cache[\"detectNetwork\"];\n  }\n\n  _uncachedDetectNetwork() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield timer(0);\n      let chainId = null;\n\n      try {\n        chainId = yield this.send(\"eth_chainId\", []);\n      } catch (error) {\n        try {\n          chainId = yield this.send(\"net_version\", []);\n        } catch (error) {}\n      }\n\n      if (chainId != null) {\n        const getNetwork = getStatic(this.constructor, \"getNetwork\");\n\n        try {\n          return getNetwork(BigNumber.from(chainId).toNumber());\n        } catch (error) {\n          return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            chainId: chainId,\n            event: \"invalidNetwork\",\n            serverError: error\n          });\n        }\n      }\n\n      return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n        event: \"noNetwork\"\n      });\n    });\n  }\n\n  getSigner(addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n  }\n\n  getUncheckedSigner(addressOrIndex) {\n    return this.getSigner(addressOrIndex).connectUnchecked();\n  }\n\n  listAccounts() {\n    return this.send(\"eth_accounts\", []).then(accounts => {\n      return accounts.map(a => this.formatter.address(a));\n    });\n  }\n\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      request: deepCopy(request),\n      provider: this\n    }); // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n\n    const cache = [\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0;\n\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(this.connection, JSON.stringify(request), getResult).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request,\n        response: result,\n        provider: this\n      });\n      return result;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request,\n        provider: this\n      });\n      throw error;\n    }); // Cache the fetch, but clear it on the next event loop\n\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  prepareRequest(method, params) {\n    switch (method) {\n      case \"getBlockNumber\":\n        return [\"eth_blockNumber\", []];\n\n      case \"getGasPrice\":\n        return [\"eth_gasPrice\", []];\n\n      case \"getBalance\":\n        return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getTransactionCount\":\n        return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getCode\":\n        return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n\n      case \"getStorageAt\":\n        return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n\n      case \"sendTransaction\":\n        return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n\n      case \"getBlock\":\n        if (params.blockTag) {\n          return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n        } else if (params.blockHash) {\n          return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n        }\n\n        return null;\n\n      case \"getTransaction\":\n        return [\"eth_getTransactionByHash\", [params.transactionHash]];\n\n      case \"getTransactionReceipt\":\n        return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n\n      case \"call\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_call\", [hexlifyTransaction(params.transaction, {\n            from: true\n          }), params.blockTag]];\n        }\n\n      case \"estimateGas\":\n        {\n          const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n          return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, {\n            from: true\n          })]];\n        }\n\n      case \"getLogs\":\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return [\"eth_getLogs\", [params.filter]];\n\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  perform(method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Legacy networks do not like the type field being passed along (which\n      // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n      if (method === \"call\" || method === \"estimateGas\") {\n        const tx = params.transaction;\n\n        if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n          // If there are no EIP-1559 properties, it might be non-EIP-a559\n          if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n            const feeData = yield this.getFeeData();\n\n            if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n              // Network doesn't know about EIP-1559 (and hence type)\n              params = shallowCopy(params);\n              params.transaction = shallowCopy(tx);\n              delete params.transaction.type;\n            }\n          }\n        }\n      }\n\n      const args = this.prepareRequest(method, params);\n\n      if (args == null) {\n        logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n          operation: method\n        });\n      }\n\n      try {\n        return yield this.send(args[0], args[1]);\n      } catch (error) {\n        return checkError(method, error, params);\n      }\n    });\n  }\n\n  _startEvent(event) {\n    if (event.tag === \"pending\") {\n      this._startPending();\n    }\n\n    super._startEvent(event);\n  }\n\n  _startPending() {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    const self = this;\n    const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          let seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            // @TODO: This should be garbage collected at some point... How? When?\n            self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit(\"pending\", tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1000);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send(\"eth_uninstallFilter\", [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(error => {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(error => {});\n  }\n\n  _stopEvent(event) {\n    if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n      this._pendingFilter = null;\n    }\n\n    super._stopEvent(event);\n  } // Convert an ethers.js transaction into a JSON-RPC transaction\n  //  - gasLimit => gas\n  //  - All values hexlified\n  //  - All numeric values zero-striped\n  //  - All addresses are lowercased\n  // NOTE: This allows a TransactionRequest, but all values should be resolved\n  //       before this is called\n  // @TODO: This will likely be removed in future versions and prepareRequest\n  //        will be the preferred method for this.\n\n\n  static hexlifyTransaction(transaction, allowExtra) {\n    // Check only allowed properties are given\n    const allowed = shallowCopy(allowedTransactionKeys);\n\n    if (allowExtra) {\n      for (const key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    checkProperties(transaction, allowed);\n    const result = {}; // JSON-RPC now requires numeric values to be \"quantity\" values\n\n    [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      const value = hexValue(transaction[key]);\n\n      if (key === \"gasLimit\") {\n        key = \"gas\";\n      }\n\n      result[key] = value;\n    });\n    [\"from\", \"to\", \"data\"].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = hexlify(transaction[key]);\n    });\n\n    if (transaction.accessList) {\n      result[\"accessList\"] = accessListify(transaction.accessList);\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Signer","BigNumber","hexlify","hexValue","isHexString","_TypedDataEncoder","checkProperties","deepCopy","defineReadOnly","getStatic","resolveProperties","shallowCopy","toUtf8Bytes","accessListify","fetchJson","poll","Logger","version","logger","BaseProvider","errorGas","checkError","method","error","params","code","errors","SERVER_ERROR","e","message","match","data","throwError","CALL_EXCEPTION","body","responseText","toLowerCase","transaction","signedTransaction","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNSUPPORTED_OPERATION","indexOf","UNPREDICTABLE_GAS_LIMIT","timer","timeout","Promise","resolve","setTimeout","getResult","payload","Error","result","getLowerCase","value","_constructorGuard","JsonRpcSigner","constructor","constructorGuard","provider","addressOrIndex","checkNew","new","target","formatter","address","throwArgumentError","connect","operation","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","getAddress","send","then","accounts","length","sendUncheckedTransaction","fromAddress","gasLimit","estimate","from","estimateGas","to","__awaiter","resolveName","tx","sender","hexTx","hexlifyTransaction","hash","signTransaction","sendTransaction","blockNumber","_getInternalBlockNumber","pollingInterval","getTransaction","undefined","_wrapTransaction","oncePoll","transactionHash","signMessage","_legacySignMessage","_signTypedData","domain","types","populated","resolveNames","name","JSON","stringify","getPayload","unlock","password","nonce","gasPrice","chainId","confirmations","wait","waitForTransaction","allowedTransactionKeys","type","accessList","maxFeePerGas","maxPriorityFeePerGas","JsonRpcProvider","url","network","networkOrReady","reject","detectNetwork","Object","freeze","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","getNetwork","toNumber","NETWORK_ERROR","event","serverError","getSigner","getUncheckedSigner","listAccounts","map","a","request","id","jsonrpc","emit","action","cache","connection","response","prepareRequest","blockTag","position","includeTransactions","blockHash","filter","perform","isZero","feeData","getFeeData","args","NOT_IMPLEMENTED","_startEvent","tag","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","forEach","_emitted","catch","_stopEvent","listenerCount","allowExtra","allowed","key"],"sourceRoot":"","sources":["../src.ts/json-rpc-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}