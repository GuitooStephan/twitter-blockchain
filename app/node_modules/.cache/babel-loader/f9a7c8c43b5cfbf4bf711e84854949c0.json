{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar baseTransaction_1 = require(\"./baseTransaction\");\n\nvar types_1 = require(\"./types\");\n\nvar util_1 = require(\"./util\");\n\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\n\nvar AccessListEIP2930Transaction =\n/** @class */\nfunction (_super) {\n  __extends(AccessListEIP2930Transaction, _super);\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n\n\n  function AccessListEIP2930Transaction(txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _this = this;\n\n    var _a, _b;\n\n    _this = _super.call(this, __assign(__assign({}, txData), {\n      type: TRANSACTION_TYPE\n    })) || this;\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n\n    _this.DEFAULT_HARDFORK = 'berlin';\n    var chainId = txData.chainId,\n        accessList = txData.accessList,\n        gasPrice = txData.gasPrice;\n    _this.common = _this._getCommon(opts.common, chainId);\n    _this.chainId = _this.common.chainIdBN(); // EIP-2718 check is done in Common\n\n    if (!_this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common');\n    }\n\n    _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]); // Populate the access list fields\n\n    var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n    _this.accessList = accessListData.accessList;\n    _this.AccessListJSON = accessListData.AccessListJSON; // Verify the access list format.\n\n    util_1.AccessLists.verifyAccessList(_this.accessList);\n    _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n\n    _this._validateCannotExceedMaxInteger({\n      gasPrice: _this.gasPrice\n    });\n\n    if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n      var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n\n      throw new Error(msg);\n    }\n\n    if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n      var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n\n      throw new Error(msg);\n    }\n\n    if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n\n      throw new Error(msg);\n    }\n\n    if (_this.common.isActivatedEIP(3860)) {\n      (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n    }\n\n    var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n\n    if (freeze) {\n      Object.freeze(_this);\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n    /**\n     * EIP-2930 alias for `r`\n     *\n     * @deprecated use `r` instead\n     */\n    get: function () {\n      return this.r;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n    /**\n     * EIP-2930 alias for `s`\n     *\n     * @deprecated use `s` instead\n     */\n    get: function () {\n      return this.s;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n    /**\n     * EIP-2930 alias for `v`\n     *\n     * @deprecated use `v` instead\n     */\n    get: function () {\n      return this.v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n\n  AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return new AccessListEIP2930Transaction(txData, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n\n\n  AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized.slice(0, 1).toString('hex')));\n    }\n\n    var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array');\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n\n\n  AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n  };\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n\n\n  AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n    }\n\n    var _a = __read(values, 11),\n        chainId = _a[0],\n        nonce = _a[1],\n        gasPrice = _a[2],\n        gasLimit = _a[3],\n        to = _a[4],\n        value = _a[5],\n        data = _a[6],\n        accessList = _a[7],\n        v = _a[8],\n        r = _a[9],\n        s = _a[10];\n\n    (0, ethereumjs_util_1.validateNoLeadingZeroes)({\n      nonce: nonce,\n      gasPrice: gasPrice,\n      gasLimit: gasLimit,\n      value: value,\n      v: v,\n      r: r,\n      s: s\n    });\n    var emptyAccessList = [];\n    return new AccessListEIP2930Transaction({\n      chainId: new ethereumjs_util_1.BN(chainId),\n      nonce: nonce,\n      gasPrice: gasPrice,\n      gasLimit: gasLimit,\n      to: to,\n      value: value,\n      data: data,\n      accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n      v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n      r: r,\n      s: s\n    }, opts);\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  AccessListEIP2930Transaction.prototype.getDataFee = function () {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value;\n    }\n\n    var cost = _super.prototype.getDataFee.call(this);\n\n    cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork()\n      };\n    }\n\n    return cost;\n  };\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n\n\n  AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n    return this.gasLimit.mul(this.gasPrice).add(this.value);\n  };\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n\n\n  AccessListEIP2930Transaction.prototype.raw = function () {\n    return [(0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit), this.to !== undefined ? this.to.buf : Buffer.from([]), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value), this.data, this.accessList, this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]), this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]), this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([])];\n  };\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n\n\n  AccessListEIP2930Transaction.prototype.serialize = function () {\n    var base = this.raw();\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n  };\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n\n\n  AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n    if (hashMessage === void 0) {\n      hashMessage = true;\n    }\n\n    var base = this.raw().slice(0, 8);\n    var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n\n    if (hashMessage) {\n      return (0, ethereumjs_util_1.keccak256)(message);\n    } else {\n      return message;\n    }\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n\n\n  AccessListEIP2930Transaction.prototype.hash = function () {\n    if (!this.isSigned()) {\n      var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\n      throw new Error(msg);\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n      }\n\n      return this.cache.hash;\n    }\n\n    return (0, ethereumjs_util_1.keccak256)(this.serialize());\n  };\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n\n\n  AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n    return this.getMessageToSign();\n  };\n  /**\n   * Returns the public key of the sender\n   */\n\n\n  AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n    var _a;\n\n    if (!this.isSigned()) {\n      var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\n      throw new Error(msg);\n    }\n\n    var msgHash = this.getMessageToVerifySignature(); // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n\n    if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n\n      throw new Error(msg);\n    }\n\n    var _b = this,\n        yParity = _b.yParity,\n        r = _b.r,\n        s = _b.s;\n\n    try {\n      return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n      (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n    } catch (e) {\n      var msg = this._errorMsg('Invalid Signature');\n\n      throw new Error(msg);\n    }\n  };\n\n  AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n    var opts = {\n      common: this.common\n    };\n    return AccessListEIP2930Transaction.fromTxData({\n      chainId: this.chainId,\n      nonce: this.nonce,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      to: this.to,\n      value: this.value,\n      data: this.data,\n      accessList: this.accessList,\n      v: new ethereumjs_util_1.BN(v - 27),\n      r: new ethereumjs_util_1.BN(r),\n      s: new ethereumjs_util_1.BN(s)\n    }, opts);\n  };\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n\n\n  AccessListEIP2930Transaction.prototype.toJSON = function () {\n    var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n    return {\n      chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n      nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n      gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n      gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: (0, ethereumjs_util_1.bnToHex)(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n      r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n      s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined\n    };\n  };\n  /**\n   * Return a compact error string representation of the object\n   */\n\n\n  AccessListEIP2930Transaction.prototype.errorStr = function () {\n    var _a, _b;\n\n    var errorStr = this._getSharedErrorPostfix(); // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n\n\n    errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n    return errorStr;\n  };\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n\n\n  AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n    return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n  };\n\n  return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction);\n\nexports.default = AccessListEIP2930Transaction;","map":{"version":3,"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAFrG;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnB,IAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;IACJF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASW,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBb,CAAnB;IAAuB;;IACvCA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;EACH,CAND;AAOH,CAd2C,EAA5C;;AAeA,IAAIG,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGb,MAAM,CAACc,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAIb,CAAT,IAAcY,CAAd,EAAiB,IAAIhB,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCS,CAArC,EAAwCZ,CAAxC,CAAJ,EACbW,CAAC,CAACX,CAAD,CAAD,GAAOY,CAAC,CAACZ,CAAD,CAAR;IACP;;IACD,OAAOW,CAAP;EACH,CAPD;;EAQA,OAAOF,QAAQ,CAACQ,KAAT,CAAe,IAAf,EAAqBF,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIG,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaL,CAAb,EAAgB;EAClD,IAAIM,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCF,CAAC,CAACE,MAAM,CAACC,QAAR,CAAzC;EACA,IAAI,CAACF,CAAL,EAAQ,OAAOD,CAAP;EACR,IAAIN,CAAC,GAAGO,CAAC,CAACjB,IAAF,CAAOgB,CAAP,CAAR;EAAA,IAAmBI,CAAnB;EAAA,IAAsBC,EAAE,GAAG,EAA3B;EAAA,IAA+BC,CAA/B;;EACA,IAAI;IACA,OAAO,CAACX,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACS,CAAC,GAAGV,CAAC,CAACa,IAAF,EAAL,EAAeC,IAApD,EAA0DH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;EAC7D,CAFD,CAGA,OAAOC,KAAP,EAAc;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAT,CAAJ;EAAuB,CAHvC,SAIQ;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBP,CAAC,GAAGP,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCO,CAAC,CAACjB,IAAF,CAAOU,CAAP;IAC1C,CAFD,SAGQ;MAAE,IAAIY,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;IAAgB;EACpC;;EACD,OAAON,EAAP;AACH,CAfD;;AAgBA5B,MAAM,CAACmC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEH,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAII,iBAAiB,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,IAAII,gBAAgB,GAAG,CAAvB;AACA,IAAIC,uBAAuB,GAAGC,MAAM,CAACC,IAAP,CAAYH,gBAAgB,CAACI,QAAjB,CAA0B,EAA1B,EAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,GAA1C,CAAZ,EAA4D,KAA5D,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,4BAA4B;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAChErD,SAAS,CAACoD,4BAAD,EAA+BC,MAA/B,CAAT;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI,SAASD,4BAAT,CAAsCE,MAAtC,EAA8CC,IAA9C,EAAoD;IAChD,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,IAAIC,KAAK,GAAG,IAAZ;;IACA,IAAIC,EAAJ,EAAQC,EAAR;;IACAF,KAAK,GAAGH,MAAM,CAAC1C,IAAP,CAAY,IAAZ,EAAkBM,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKqC,MAAL,CAAT,EAAuB;MAAEK,IAAI,EAAEb;IAAR,CAAvB,CAA1B,KAAiF,IAAzF;IACA;AACR;AACA;AACA;AACA;AACA;;IACQU,KAAK,CAACI,gBAAN,GAAyB,QAAzB;IACA,IAAIC,OAAO,GAAGP,MAAM,CAACO,OAArB;IAAA,IAA8BC,UAAU,GAAGR,MAAM,CAACQ,UAAlD;IAAA,IAA8DC,QAAQ,GAAGT,MAAM,CAACS,QAAhF;IACAP,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACS,UAAN,CAAiBV,IAAI,CAACS,MAAtB,EAA8BH,OAA9B,CAAf;IACAL,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACQ,MAAN,CAAaE,SAAb,EAAhB,CAdgD,CAehD;;IACA,IAAI,CAACV,KAAK,CAACQ,MAAN,CAAaG,cAAb,CAA4B,IAA5B,CAAL,EAAwC;MACpC,MAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;IACH;;IACDZ,KAAK,CAACa,kBAAN,GAA2Bb,KAAK,CAACa,kBAAN,CAAyBC,MAAzB,CAAgC,CAAC,IAAD,EAAO,IAAP,CAAhC,CAA3B,CAnBgD,CAoBhD;;IACA,IAAIC,cAAc,GAAG1B,MAAM,CAAC2B,WAAP,CAAmBC,iBAAnB,CAAqCX,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,EAAjG,CAArB;IACAN,KAAK,CAACM,UAAN,GAAmBS,cAAc,CAACT,UAAlC;IACAN,KAAK,CAACkB,cAAN,GAAuBH,cAAc,CAACG,cAAtC,CAvBgD,CAwBhD;;IACA7B,MAAM,CAAC2B,WAAP,CAAmBG,gBAAnB,CAAoCnB,KAAK,CAACM,UAA1C;IACAN,KAAK,CAACO,QAAN,GAAiB,IAAItB,iBAAiB,CAACmC,EAAtB,CAAyB,CAAC,GAAGnC,iBAAiB,CAACoC,QAAtB,EAAgCd,QAAQ,KAAK,EAAb,GAAkB,IAAlB,GAAyBA,QAAzD,CAAzB,CAAjB;;IACAP,KAAK,CAACsB,+BAAN,CAAsC;MAClCf,QAAQ,EAAEP,KAAK,CAACO;IADkB,CAAtC;;IAGA,IAAIP,KAAK,CAACO,QAAN,CAAegB,GAAf,CAAmBvB,KAAK,CAACwB,QAAzB,EAAmCC,EAAnC,CAAsCxC,iBAAiB,CAACyC,WAAxD,CAAJ,EAA0E;MACtE,IAAIC,GAAG,GAAG3B,KAAK,CAAC4B,SAAN,CAAgB,+CAAhB,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAI3B,KAAK,CAAC6B,CAAN,IAAW,CAAC7B,KAAK,CAAC6B,CAAN,CAAQC,GAAR,CAAY,CAAZ,CAAZ,IAA8B,CAAC9B,KAAK,CAAC6B,CAAN,CAAQC,GAAR,CAAY,CAAZ,CAAnC,EAAmD;MAC/C,IAAIH,GAAG,GAAG3B,KAAK,CAAC4B,SAAN,CAAgB,yDAAhB,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAI3B,KAAK,CAACQ,MAAN,CAAauB,WAAb,CAAyB,WAAzB,MAA0C,CAAC9B,EAAE,GAAGD,KAAK,CAACpC,CAAZ,MAAmB,IAAnB,IAA2BqC,EAAE,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,EAAE,CAACwB,EAAH,CAAMrC,OAAO,CAAC4C,OAAd,CAA9F,CAAJ,EAA2H;MACvH,IAAIL,GAAG,GAAG3B,KAAK,CAAC4B,SAAN,CAAgB,8EAAhB,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAI3B,KAAK,CAACQ,MAAN,CAAaG,cAAb,CAA4B,IAA5B,CAAJ,EAAuC;MACnC,CAAC,GAAGtB,MAAM,CAAC4C,oBAAX,EAAiCjC,KAAK,CAACQ,MAAvC,EAA+CR,KAAK,CAACkC,IAAN,CAAWlE,MAA1D;IACH;;IACD,IAAImE,MAAM,GAAG,CAACjC,EAAE,GAAGH,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACoC,MAAvD,MAAmE,IAAnE,IAA2EjC,EAAE,KAAK,KAAK,CAAvF,GAA2FA,EAA3F,GAAgG,IAA7G;;IACA,IAAIiC,MAAJ,EAAY;MACRvF,MAAM,CAACuF,MAAP,CAAcnC,KAAd;IACH;;IACD,OAAOA,KAAP;EACH;;EACDpD,MAAM,CAACmC,cAAP,CAAsBa,4BAA4B,CAAC3C,SAAnD,EAA8D,SAA9D,EAAyE;IACrE;AACR;AACA;AACA;AACA;IACQmF,GAAG,EAAE,YAAY;MACb,OAAO,KAAK7D,CAAZ;IACH,CARoE;IASrE8D,UAAU,EAAE,KATyD;IAUrEC,YAAY,EAAE;EAVuD,CAAzE;EAYA1F,MAAM,CAACmC,cAAP,CAAsBa,4BAA4B,CAAC3C,SAAnD,EAA8D,SAA9D,EAAyE;IACrE;AACR;AACA;AACA;AACA;IACQmF,GAAG,EAAE,YAAY;MACb,OAAO,KAAKxE,CAAZ;IACH,CARoE;IASrEyE,UAAU,EAAE,KATyD;IAUrEC,YAAY,EAAE;EAVuD,CAAzE;EAYA1F,MAAM,CAACmC,cAAP,CAAsBa,4BAA4B,CAAC3C,SAAnD,EAA8D,SAA9D,EAAyE;IACrE;AACR;AACA;AACA;AACA;IACQmF,GAAG,EAAE,YAAY;MACb,OAAO,KAAKP,CAAZ;IACH,CARoE;IASrEQ,UAAU,EAAE,KATyD;IAUrEC,YAAY,EAAE;EAVuD,CAAzE;EAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACI1C,4BAA4B,CAAC2C,UAA7B,GAA0C,UAAUzC,MAAV,EAAkBC,IAAlB,EAAwB;IAC9D,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,OAAO,IAAIH,4BAAJ,CAAiCE,MAAjC,EAAyCC,IAAzC,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIH,4BAA4B,CAAC4C,gBAA7B,GAAgD,UAAUC,UAAV,EAAsB1C,IAAtB,EAA4B;IACxE,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,IAAI,CAAC0C,UAAU,CAACC,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvB,CAA8BpD,uBAA9B,CAAL,EAA6D;MACzD,MAAM,IAAIqB,KAAJ,CAAU,sFAAsFE,MAAtF,CAA6FxB,gBAA7F,EAA+G,cAA/G,EAA+HwB,MAA/H,CAAsI2B,UAAU,CAC3JC,KADiJ,CAC3I,CAD2I,EACxI,CADwI,EAEjJhD,QAFiJ,CAExI,KAFwI,CAAtI,CAAV,CAAN;IAGH;;IACD,IAAIkD,MAAM,GAAG3D,iBAAiB,CAAC4D,GAAlB,CAAsBC,MAAtB,CAA6BL,UAAU,CAACC,KAAX,CAAiB,CAAjB,CAA7B,CAAb;;IACA,IAAI,CAAC3F,KAAK,CAACgG,OAAN,CAAcH,MAAd,CAAL,EAA4B;MACxB,MAAM,IAAIhC,KAAJ,CAAU,4CAAV,CAAN;IACH;;IACD,OAAOhB,4BAA4B,CAACoD,eAA7B,CAA6CJ,MAA7C,EAAqD7C,IAArD,CAAP;EACH,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIH,4BAA4B,CAACqD,mBAA7B,GAAmD,UAAUR,UAAV,EAAsB1C,IAAtB,EAA4B;IAC3E,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,OAAOH,4BAA4B,CAAC4C,gBAA7B,CAA8CC,UAA9C,EAA0D1C,IAA1D,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIH,4BAA4B,CAACoD,eAA7B,GAA+C,UAAUJ,MAAV,EAAkB7C,IAAlB,EAAwB;IACnE,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,IAAI6C,MAAM,CAAC5E,MAAP,KAAkB,CAAlB,IAAuB4E,MAAM,CAAC5E,MAAP,KAAkB,EAA7C,EAAiD;MAC7C,MAAM,IAAI4C,KAAJ,CAAU,uGAAV,CAAN;IACH;;IACD,IAAIX,EAAE,GAAG/B,MAAM,CAAC0E,MAAD,EAAS,EAAT,CAAf;IAAA,IAA6BvC,OAAO,GAAGJ,EAAE,CAAC,CAAD,CAAzC;IAAA,IAA8CiD,KAAK,GAAGjD,EAAE,CAAC,CAAD,CAAxD;IAAA,IAA6DM,QAAQ,GAAGN,EAAE,CAAC,CAAD,CAA1E;IAAA,IAA+EuB,QAAQ,GAAGvB,EAAE,CAAC,CAAD,CAA5F;IAAA,IAAiGkD,EAAE,GAAGlD,EAAE,CAAC,CAAD,CAAxG;IAAA,IAA6GpB,KAAK,GAAGoB,EAAE,CAAC,CAAD,CAAvH;IAAA,IAA4HiC,IAAI,GAAGjC,EAAE,CAAC,CAAD,CAArI;IAAA,IAA0IK,UAAU,GAAGL,EAAE,CAAC,CAAD,CAAzJ;IAAA,IAA8J4B,CAAC,GAAG5B,EAAE,CAAC,CAAD,CAApK;IAAA,IAAyK1B,CAAC,GAAG0B,EAAE,CAAC,CAAD,CAA/K;IAAA,IAAoLrC,CAAC,GAAGqC,EAAE,CAAC,EAAD,CAA1L;;IACA,CAAC,GAAGhB,iBAAiB,CAACmE,uBAAtB,EAA+C;MAAEF,KAAK,EAAEA,KAAT;MAAgB3C,QAAQ,EAAEA,QAA1B;MAAoCiB,QAAQ,EAAEA,QAA9C;MAAwD3C,KAAK,EAAEA,KAA/D;MAAsEgD,CAAC,EAAEA,CAAzE;MAA4EtD,CAAC,EAAEA,CAA/E;MAAkFX,CAAC,EAAEA;IAArF,CAA/C;IACA,IAAIyF,eAAe,GAAG,EAAtB;IACA,OAAO,IAAIzD,4BAAJ,CAAiC;MACpCS,OAAO,EAAE,IAAIpB,iBAAiB,CAACmC,EAAtB,CAAyBf,OAAzB,CAD2B;MAEpC6C,KAAK,EAAEA,KAF6B;MAGpC3C,QAAQ,EAAEA,QAH0B;MAIpCiB,QAAQ,EAAEA,QAJ0B;MAKpC2B,EAAE,EAAEA,EALgC;MAMpCtE,KAAK,EAAEA,KAN6B;MAOpCqD,IAAI,EAAEA,IAP8B;MAQpC5B,UAAU,EAAEA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D+C,eARpC;MASpCxB,CAAC,EAAEA,CAAC,KAAKyB,SAAN,GAAkB,IAAIrE,iBAAiB,CAACmC,EAAtB,CAAyBS,CAAzB,CAAlB,GAAgDyB,SATf;MAUpC/E,CAAC,EAAEA,CAViC;MAWpCX,CAAC,EAAEA;IAXiC,CAAjC,EAYJmC,IAZI,CAAP;EAaH,CArBD;EAsBA;AACJ;AACA;;;EACIH,4BAA4B,CAAC3C,SAA7B,CAAuCsG,UAAvC,GAAoD,YAAY;IAC5D,IAAI,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,KAAgC,KAAKlD,MAAL,CAAYkD,QAAZ,EAA1D,EAAkF;MAC9E,OAAO,KAAKF,KAAL,CAAWC,OAAX,CAAmB5E,KAA1B;IACH;;IACD,IAAI8E,IAAI,GAAG9D,MAAM,CAAC5C,SAAP,CAAiBsG,UAAjB,CAA4BpG,IAA5B,CAAiC,IAAjC,CAAX;;IACAwG,IAAI,CAACC,KAAL,CAAWvE,MAAM,CAAC2B,WAAP,CAAmB6C,iBAAnB,CAAqC,KAAKvD,UAA1C,EAAsD,KAAKE,MAA3D,CAAX;;IACA,IAAI5D,MAAM,CAACkH,QAAP,CAAgB,IAAhB,CAAJ,EAA2B;MACvB,KAAKN,KAAL,CAAWC,OAAX,GAAqB;QACjB5E,KAAK,EAAE8E,IADU;QAEjBD,QAAQ,EAAE,KAAKlD,MAAL,CAAYkD,QAAZ;MAFO,CAArB;IAIH;;IACD,OAAOC,IAAP;EACH,CAbD;EAcA;AACJ;AACA;;;EACI/D,4BAA4B,CAAC3C,SAA7B,CAAuC8G,cAAvC,GAAwD,YAAY;IAChE,OAAO,KAAKvC,QAAL,CAAcD,GAAd,CAAkB,KAAKhB,QAAvB,EAAiCyD,GAAjC,CAAqC,KAAKnF,KAA1C,CAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIe,4BAA4B,CAAC3C,SAA7B,CAAuCgH,GAAvC,GAA6C,YAAY;IACrD,OAAO,CACH,CAAC,GAAGhF,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAK7D,OAA/C,CADG,EAEH,CAAC,GAAGpB,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAKhB,KAA/C,CAFG,EAGH,CAAC,GAAGjE,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAK3D,QAA/C,CAHG,EAIH,CAAC,GAAGtB,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAK1C,QAA/C,CAJG,EAKH,KAAK2B,EAAL,KAAYG,SAAZ,GAAwB,KAAKH,EAAL,CAAQgB,GAAhC,GAAsC3E,MAAM,CAACC,IAAP,CAAY,EAAZ,CALnC,EAMH,CAAC,GAAGR,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAKrF,KAA/C,CANG,EAOH,KAAKqD,IAPF,EAQH,KAAK5B,UARF,EASH,KAAKuB,CAAL,KAAWyB,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAKrC,CAA/C,CAAvB,GAA2ErC,MAAM,CAACC,IAAP,CAAY,EAAZ,CATxE,EAUH,KAAKlB,CAAL,KAAW+E,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAK3F,CAA/C,CAAvB,GAA2EiB,MAAM,CAACC,IAAP,CAAY,EAAZ,CAVxE,EAWH,KAAK7B,CAAL,KAAW0F,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACiF,kBAAtB,EAA0C,KAAKtG,CAA/C,CAAvB,GAA2E4B,MAAM,CAACC,IAAP,CAAY,EAAZ,CAXxE,CAAP;EAaH,CAdD;EAeA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIG,4BAA4B,CAAC3C,SAA7B,CAAuCmH,SAAvC,GAAmD,YAAY;IAC3D,IAAIC,IAAI,GAAG,KAAKJ,GAAL,EAAX;IACA,OAAOzE,MAAM,CAACsB,MAAP,CAAc,CAACvB,uBAAD,EAA0BN,iBAAiB,CAAC4D,GAAlB,CAAsByB,MAAtB,CAA6BD,IAA7B,CAA1B,CAAd,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIzE,4BAA4B,CAAC3C,SAA7B,CAAuCsH,gBAAvC,GAA0D,UAAUC,WAAV,EAAuB;IAC7E,IAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4B;MAAEA,WAAW,GAAG,IAAd;IAAqB;;IACnD,IAAIH,IAAI,GAAG,KAAKJ,GAAL,GAAWvB,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAX;IACA,IAAI+B,OAAO,GAAGjF,MAAM,CAACsB,MAAP,CAAc,CAACvB,uBAAD,EAA0BN,iBAAiB,CAAC4D,GAAlB,CAAsByB,MAAtB,CAA6BD,IAA7B,CAA1B,CAAd,CAAd;;IACA,IAAIG,WAAJ,EAAiB;MACb,OAAO,CAAC,GAAGvF,iBAAiB,CAACyF,SAAtB,EAAiCD,OAAjC,CAAP;IACH,CAFD,MAGK;MACD,OAAOA,OAAP;IACH;EACJ,CAVD;EAWA;AACJ;AACA;AACA;AACA;AACA;;;EACI7E,4BAA4B,CAAC3C,SAA7B,CAAuC0H,IAAvC,GAA8C,YAAY;IACtD,IAAI,CAAC,KAAKC,QAAL,EAAL,EAAsB;MAClB,IAAIjD,GAAG,GAAG,KAAKC,SAAL,CAAe,sDAAf,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAI/E,MAAM,CAACkH,QAAP,CAAgB,IAAhB,CAAJ,EAA2B;MACvB,IAAI,CAAC,KAAKN,KAAL,CAAWmB,IAAhB,EAAsB;QAClB,KAAKnB,KAAL,CAAWmB,IAAX,GAAkB,CAAC,GAAG1F,iBAAiB,CAACyF,SAAtB,EAAiC,KAAKN,SAAL,EAAjC,CAAlB;MACH;;MACD,OAAO,KAAKZ,KAAL,CAAWmB,IAAlB;IACH;;IACD,OAAO,CAAC,GAAG1F,iBAAiB,CAACyF,SAAtB,EAAiC,KAAKN,SAAL,EAAjC,CAAP;EACH,CAZD;EAaA;AACJ;AACA;;;EACIxE,4BAA4B,CAAC3C,SAA7B,CAAuC4H,2BAAvC,GAAqE,YAAY;IAC7E,OAAO,KAAKN,gBAAL,EAAP;EACH,CAFD;EAGA;AACJ;AACA;;;EACI3E,4BAA4B,CAAC3C,SAA7B,CAAuC6H,kBAAvC,GAA4D,YAAY;IACpE,IAAI7E,EAAJ;;IACA,IAAI,CAAC,KAAK2E,QAAL,EAAL,EAAsB;MAClB,IAAIjD,GAAG,GAAG,KAAKC,SAAL,CAAe,sDAAf,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAIoD,OAAO,GAAG,KAAKF,2BAAL,EAAd,CANoE,CAOpE;IACA;;IACA,IAAI,KAAKrE,MAAL,CAAYuB,WAAZ,CAAwB,WAAxB,MAAyC,CAAC9B,EAAE,GAAG,KAAKrC,CAAX,MAAkB,IAAlB,IAA0BqC,EAAE,KAAK,KAAK,CAAtC,GAA0C,KAAK,CAA/C,GAAmDA,EAAE,CAACwB,EAAH,CAAMrC,OAAO,CAAC4C,OAAd,CAA5F,CAAJ,EAAyH;MACrH,IAAIL,GAAG,GAAG,KAAKC,SAAL,CAAe,8EAAf,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;;IACD,IAAIzB,EAAE,GAAG,IAAT;IAAA,IAAe8E,OAAO,GAAG9E,EAAE,CAAC8E,OAA5B;IAAA,IAAqCzG,CAAC,GAAG2B,EAAE,CAAC3B,CAA5C;IAAA,IAA+CX,CAAC,GAAGsC,EAAE,CAACtC,CAAtD;;IACA,IAAI;MACA,OAAO,CAAC,GAAGqB,iBAAiB,CAACgG,SAAtB,EAAiCF,OAAjC,EAA0CC,OAAO,CAACE,IAAR,CAAa,EAAb,CAA1C,EAA4D;MACnE,CAAC,GAAGjG,iBAAiB,CAACiF,kBAAtB,EAA0C3F,CAA1C,CADO,EACuC,CAAC,GAAGU,iBAAiB,CAACiF,kBAAtB,EAA0CtG,CAA1C,CADvC,CAAP;IAEH,CAHD,CAIA,OAAOa,CAAP,EAAU;MACN,IAAIkD,GAAG,GAAG,KAAKC,SAAL,CAAe,mBAAf,CAAV;;MACA,MAAM,IAAIhB,KAAJ,CAAUe,GAAV,CAAN;IACH;EACJ,CAtBD;;EAuBA/B,4BAA4B,CAAC3C,SAA7B,CAAuCkI,iBAAvC,GAA2D,UAAUtD,CAAV,EAAatD,CAAb,EAAgBX,CAAhB,EAAmB;IAC1E,IAAImC,IAAI,GAAG;MACPS,MAAM,EAAE,KAAKA;IADN,CAAX;IAGA,OAAOZ,4BAA4B,CAAC2C,UAA7B,CAAwC;MAC3ClC,OAAO,EAAE,KAAKA,OAD6B;MAE3C6C,KAAK,EAAE,KAAKA,KAF+B;MAG3C3C,QAAQ,EAAE,KAAKA,QAH4B;MAI3CiB,QAAQ,EAAE,KAAKA,QAJ4B;MAK3C2B,EAAE,EAAE,KAAKA,EALkC;MAM3CtE,KAAK,EAAE,KAAKA,KAN+B;MAO3CqD,IAAI,EAAE,KAAKA,IAPgC;MAQ3C5B,UAAU,EAAE,KAAKA,UAR0B;MAS3CuB,CAAC,EAAE,IAAI5C,iBAAiB,CAACmC,EAAtB,CAAyBS,CAAC,GAAG,EAA7B,CATwC;MAU3CtD,CAAC,EAAE,IAAIU,iBAAiB,CAACmC,EAAtB,CAAyB7C,CAAzB,CAVwC;MAW3CX,CAAC,EAAE,IAAIqB,iBAAiB,CAACmC,EAAtB,CAAyBxD,CAAzB;IAXwC,CAAxC,EAYJmC,IAZI,CAAP;EAaH,CAjBD;EAkBA;AACJ;AACA;;;EACIH,4BAA4B,CAAC3C,SAA7B,CAAuCmI,MAAvC,GAAgD,YAAY;IACxD,IAAIC,cAAc,GAAGhG,MAAM,CAAC2B,WAAP,CAAmBsE,iBAAnB,CAAqC,KAAKhF,UAA1C,CAArB;IACA,OAAO;MACHD,OAAO,EAAE,CAAC,GAAGpB,iBAAiB,CAACsG,OAAtB,EAA+B,KAAKlF,OAApC,CADN;MAEH6C,KAAK,EAAE,CAAC,GAAGjE,iBAAiB,CAACsG,OAAtB,EAA+B,KAAKrC,KAApC,CAFJ;MAGH3C,QAAQ,EAAE,CAAC,GAAGtB,iBAAiB,CAACsG,OAAtB,EAA+B,KAAKhF,QAApC,CAHP;MAIHiB,QAAQ,EAAE,CAAC,GAAGvC,iBAAiB,CAACsG,OAAtB,EAA+B,KAAK/D,QAApC,CAJP;MAKH2B,EAAE,EAAE,KAAKA,EAAL,KAAYG,SAAZ,GAAwB,KAAKH,EAAL,CAAQzD,QAAR,EAAxB,GAA6C4D,SAL9C;MAMHzE,KAAK,EAAE,CAAC,GAAGI,iBAAiB,CAACsG,OAAtB,EAA+B,KAAK1G,KAApC,CANJ;MAOHqD,IAAI,EAAE,OAAO,KAAKA,IAAL,CAAUxC,QAAV,CAAmB,KAAnB,CAPV;MAQHY,UAAU,EAAE+E,cART;MASHxD,CAAC,EAAE,KAAKA,CAAL,KAAWyB,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACsG,OAAtB,EAA+B,KAAK1D,CAApC,CAAvB,GAAgEyB,SAThE;MAUH/E,CAAC,EAAE,KAAKA,CAAL,KAAW+E,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACsG,OAAtB,EAA+B,KAAKhH,CAApC,CAAvB,GAAgE+E,SAVhE;MAWH1F,CAAC,EAAE,KAAKA,CAAL,KAAW0F,SAAX,GAAuB,CAAC,GAAGrE,iBAAiB,CAACsG,OAAtB,EAA+B,KAAK3H,CAApC,CAAvB,GAAgE0F;IAXhE,CAAP;EAaH,CAfD;EAgBA;AACJ;AACA;;;EACI1D,4BAA4B,CAAC3C,SAA7B,CAAuCuI,QAAvC,GAAkD,YAAY;IAC1D,IAAIvF,EAAJ,EAAQC,EAAR;;IACA,IAAIsF,QAAQ,GAAG,KAAKC,sBAAL,EAAf,CAF0D,CAG1D;;;IACAD,QAAQ,IAAI,aAAa1E,MAAb,CAAoB,KAAKP,QAAzB,EAAmC,mBAAnC,EAAwDO,MAAxD,CAA+D,CAACZ,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKK,UAAX,MAA2B,IAA3B,IAAmCL,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACjC,MAArE,MAAiF,IAAjF,IAAyFkC,EAAE,KAAK,KAAK,CAArG,GAAyGA,EAAzG,GAA8G,CAA7K,CAAZ;IACA,OAAOsF,QAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;AACA;;;EACI5F,4BAA4B,CAAC3C,SAA7B,CAAuC2E,SAAvC,GAAmD,UAAUD,GAAV,EAAe;IAC9D,OAAO,GAAGb,MAAH,CAAUa,GAAV,EAAe,IAAf,EAAqBb,MAArB,CAA4B,KAAK0E,QAAL,EAA5B,EAA6C,GAA7C,CAAP;EACH,CAFD;;EAGA,OAAO5F,4BAAP;AACH,CA/WiD,CA+WhDT,iBAAiB,CAACuG,eA/W8B,CAAlD;;AAgXA1G,OAAO,CAAC2G,OAAR,GAAkB/F,4BAAlB","names":["TRANSACTION_TYPE","TRANSACTION_TYPE_BUFFER","Buffer","from","toString","padStart","__extends","txData","opts","_super","type","_this","accessList","gasPrice","common","_getCommon","chainId","chainIdBN","isActivatedEIP","Error","activeCapabilities","concat","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","ethereumjs_util_1","_validateCannotExceedMaxInteger","mul","gasLimit","gt","msg","_errorMsg","v","eqn","gteHardfork","s","_a","types_1","data","length","freeze","_b","Object","AccessListEIP2930Transaction","r","serialized","slice","equals","values","decode","Array","isArray","fromValuesArray","fromSerializedTx","nonce","to","value","emptyAccessList","undefined","cache","dataFee","hardfork","cost","getDataFee","call","iaddn","getDataFeeEIP2930","isFrozen","add","buf","base","raw","encode","hashMessage","message","isSigned","hash","serialize","getMessageToSign","msgHash","getMessageToVerifySignature","yParity","addn","e","fromTxData","accessListJSON","getAccessListJSON","errorStr","_getSharedErrorPostfix","baseTransaction_1"],"sourceRoot":"","sources":["../src/eip2930Transaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}