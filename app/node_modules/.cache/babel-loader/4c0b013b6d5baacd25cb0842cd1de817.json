{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\n\nvar externals_1 = require(\"./externals\");\n\nvar internal_1 = require(\"./internal\");\n\nvar helpers_1 = require(\"./helpers\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\n\n\nvar intToHex = function (i) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(\"Received an invalid integer type: \".concat(i));\n  }\n\n  return \"0x\".concat(i.toString(16));\n};\n\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\n\nvar intToBuffer = function (i) {\n  var hex = (0, exports.intToHex)(i);\n  return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\n\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\n\nvar zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\n\nvar setLength = function (msg, length, right) {\n  var buf = (0, exports.zeros)(length);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\n\nvar setLengthLeft = function (msg, length) {\n  (0, helpers_1.assertIsBuffer)(msg);\n  return setLength(msg, length, false);\n};\n\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\nvar setLengthRight = function (msg, length) {\n  (0, helpers_1.assertIsBuffer)(msg);\n  return setLength(msg, length, true);\n};\n\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\n\nvar stripZeros = function (a) {\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\n\n\nvar unpadBuffer = function (a) {\n  (0, helpers_1.assertIsBuffer)(a);\n  return stripZeros(a);\n};\n\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\n\nvar unpadArray = function (a) {\n  (0, helpers_1.assertIsArray)(a);\n  return stripZeros(a);\n};\n\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\n\nvar unpadHexString = function (a) {\n  (0, helpers_1.assertIsHexString)(a);\n  a = (0, internal_1.stripHexPrefix)(a);\n  return stripZeros(a);\n};\n\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\n\nvar toBuffer = function (v) {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0);\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v);\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v);\n  }\n\n  if (typeof v === 'string') {\n    if (!(0, internal_1.isHexString)(v)) {\n      throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \".concat(v));\n    }\n\n    return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n  }\n\n  if (typeof v === 'number') {\n    return (0, exports.intToBuffer)(v);\n  }\n\n  if (externals_1.BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(\"Cannot convert negative BN to buffer. Given: \".concat(v));\n    }\n\n    return v.toArrayLike(Buffer);\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray());\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer());\n  }\n\n  throw new Error('invalid type');\n};\n\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\n\nvar bufferToInt = function (buf) {\n  return new externals_1.BN((0, exports.toBuffer)(buf)).toNumber();\n};\n\nexports.bufferToInt = bufferToInt;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\n\nvar bufferToHex = function (buf) {\n  buf = (0, exports.toBuffer)(buf);\n  return '0x' + buf.toString('hex');\n};\n\nexports.bufferToHex = bufferToHex;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\n\nvar fromSigned = function (num) {\n  return new externals_1.BN(num).fromTwos(256);\n};\n\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\n\nvar toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\n\nvar addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\n\nexports.addHexPrefix = addHexPrefix;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\n\nvar toUtf8 = function (hex) {\n  var zerosRegexp = /^(00)+|(00)+$/g;\n  hex = (0, internal_1.stripHexPrefix)(hex);\n\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided');\n  }\n\n  var bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n  return bufferVal.toString('utf8');\n};\n\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\n\nvar baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return \"0x\".concat(ba.toString('hex'));\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push((0, exports.baToJSON)(ba[i]));\n    }\n\n    return array;\n  }\n};\n\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\n\nvar validateNoLeadingZeroes = function (values) {\n  var e_1, _a;\n\n  try {\n    for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n          k = _d[0],\n          v = _d[1];\n\n      if (v !== undefined && v.length > 0 && v[0] === 0) {\n        throw new Error(\"\".concat(k, \" cannot have leading zeroes, received: \").concat(v.toString('hex')));\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n};\n\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\n\nfunction arrToBufArr(arr) {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr);\n  }\n\n  return arr.map(function (a) {\n    return arrToBufArr(a);\n  });\n}\n\nexports.arrToBufArr = arrToBufArr;\n\nfunction bufArrToArr(arr) {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr !== null && arr !== void 0 ? arr : []);\n  }\n\n  return arr.map(function (a) {\n    return bufArrToArr(a);\n  });\n}\n\nexports.bufArrToArr = bufArrToArr;","map":{"version":3,"mappings":"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","names":["intToHex","i","Number","isSafeInteger","Error","toString","exports","intToBuffer","hex","Buffer","from","slice","zeros","bytes","allocUnsafe","fill","setLength","msg","length","right","buf","copy","setLengthLeft","setLengthRight","stripZeros","a","first","unpadBuffer","unpadArray","unpadHexString","toBuffer","v","undefined","isBuffer","Array","isArray","Uint8Array","externals_1","isBN","isNeg","toArrayLike","toArray","bufferToInt","toNumber","bufferToHex","fromSigned","num","fromTwos","toUnsigned","toTwos","addHexPrefix","str","toUtf8","zerosRegexp","bufferVal","replace","baToJSON","ba","array","push","validateNoLeadingZeroes","values","entries","_c","k","concat","arrToBufArr","arr","map","bufArrToArr"],"sourceRoot":"","sources":["../src/bytes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}