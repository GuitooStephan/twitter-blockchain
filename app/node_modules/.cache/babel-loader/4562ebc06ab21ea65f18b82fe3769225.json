{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\"; // The transaction has already been sanitized by the calls in Provider\n\nfunction getTransactionPostData(transaction) {\n  const result = {};\n\n  for (let key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n\n    let value = transaction[key];\n\n    if (key === \"type\" && value === 0) {\n      continue;\n    } // Quantity-types require no leading zero, unless 0\n\n\n    if ({\n      type: true,\n      gasLimit: true,\n      gasPrice: true,\n      maxFeePerGs: true,\n      maxPriorityFeePerGas: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = hexValue(hexlify(value));\n    } else if (key === \"accessList\") {\n      value = \"[\" + accessListify(value).map(set => {\n        return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n      }).join(\",\") + \"]\";\n    } else {\n      value = hexlify(value);\n    }\n\n    result[key] = value;\n  }\n\n  return result;\n}\n\nfunction getResult(result) {\n  // getLogs, getHistory have weird success responses\n  if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n    return result.result;\n  }\n\n  if (result.status != 1 || result.message != \"OK\") {\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n\n    if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n      error.throttleRetry = true;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction getJsonResult(result) {\n  // This response indicates we are being throttled\n  if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n    const error = new Error(\"throttled response\");\n    error.result = JSON.stringify(result);\n    error.throttleRetry = true;\n    throw error;\n  }\n\n  if (result.jsonrpc != \"2.0\") {\n    // @TODO: not any\n    const error = new Error(\"invalid response\");\n    error.result = JSON.stringify(result);\n    throw error;\n  }\n\n  if (result.error) {\n    // @TODO: not any\n    const error = new Error(result.error.message || \"unknown error\");\n\n    if (result.error.code) {\n      error.code = result.error.code;\n    }\n\n    if (result.error.data) {\n      error.data = result.error.data;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n} // The blockTag was normalized as a string by the Provider pre-perform operations\n\n\nfunction checkLogTag(blockTag) {\n  if (blockTag === \"pending\") {\n    throw new Error(\"pending not supported\");\n  }\n\n  if (blockTag === \"latest\") {\n    return blockTag;\n  }\n\n  return parseInt(blockTag.substring(2), 16);\n}\n\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError(method, error, transaction) {\n  // Undo the \"convenience\" some nodes are attempting to prevent backwards\n  // incompatibility; maybe for v6 consider forwarding reverts as errors\n  if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n    const e = error.error; // Etherscan keeps changing their string\n\n    if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n      // Etherscan prefixes the data like \"Reverted 0x1234\"\n      let data = e.data;\n\n      if (data) {\n        data = \"0x\" + data.replace(/^.*0x/i, \"\");\n      }\n\n      if (isHexString(data)) {\n        return data;\n      }\n\n      logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n        error,\n        data: \"0x\"\n      });\n    }\n  } // Get the message from any nested error structure\n\n\n  let message = error.message;\n\n  if (error.code === Logger.errors.SERVER_ERROR) {\n    if (error.error && typeof error.error.message === \"string\") {\n      message = error.error.message;\n    } else if (typeof error.body === \"string\") {\n      message = error.body;\n    } else if (typeof error.responseText === \"string\") {\n      message = error.responseText;\n    }\n  }\n\n  message = (message || \"\").toLowerCase(); // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n\n  if (message.match(/insufficient funds/)) {\n    logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n      error,\n      method,\n      transaction\n    });\n  } // \"Transaction with the same hash was already imported.\"\n\n\n  if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n    logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n      error,\n      method,\n      transaction\n    });\n  } // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n\n\n  if (message.match(/another transaction with same nonce/)) {\n    logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  if (message.match(/execution failed due to an exception|execution reverted/)) {\n    logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n      error,\n      method,\n      transaction\n    });\n  }\n\n  throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider {\n  constructor(network, apiKey) {\n    logger.checkNew(new.target, EtherscanProvider);\n    super(network);\n    defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n    defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n  }\n\n  getBaseUrl() {\n    switch (this.network ? this.network.name : \"invalid\") {\n      case \"homestead\":\n        return \"https:/\\/api.etherscan.io\";\n\n      case \"ropsten\":\n        return \"https:/\\/api-ropsten.etherscan.io\";\n\n      case \"rinkeby\":\n        return \"https:/\\/api-rinkeby.etherscan.io\";\n\n      case \"kovan\":\n        return \"https:/\\/api-kovan.etherscan.io\";\n\n      case \"goerli\":\n        return \"https:/\\/api-goerli.etherscan.io\";\n\n      default:\n    }\n\n    return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n  }\n\n  getUrl(module, params) {\n    const query = Object.keys(params).reduce((accum, key) => {\n      const value = params[key];\n\n      if (value != null) {\n        accum += `&${key}=${value}`;\n      }\n\n      return accum;\n    }, \"\");\n    const apiKey = this.apiKey ? `&apikey=${this.apiKey}` : \"\";\n    return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n  }\n\n  getPostUrl() {\n    return `${this.baseUrl}/api`;\n  }\n\n  getPostData(module, params) {\n    params.module = module;\n    params.apikey = this.apiKey;\n    return params;\n  }\n\n  fetch(module, params, post) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = post ? this.getPostUrl() : this.getUrl(module, params);\n      const payload = post ? this.getPostData(module, params) : null;\n      const procFunc = module === \"proxy\" ? getJsonResult : getResult;\n      this.emit(\"debug\", {\n        action: \"request\",\n        request: url,\n        provider: this\n      });\n      const connection = {\n        url: url,\n        throttleSlotInterval: 1000,\n        throttleCallback: (attempt, url) => {\n          if (this.isCommunityResource()) {\n            showThrottleMessage();\n          }\n\n          return Promise.resolve(true);\n        }\n      };\n      let payloadStr = null;\n\n      if (payload) {\n        connection.headers = {\n          \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n        };\n        payloadStr = Object.keys(payload).map(key => {\n          return `${key}=${payload[key]}`;\n        }).join(\"&\");\n      }\n\n      const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: url,\n        response: deepCopy(result),\n        provider: this\n      });\n      return result;\n    });\n  }\n\n  detectNetwork() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.network;\n    });\n  }\n\n  perform(method, params) {\n    const _super = Object.create(null, {\n      perform: {\n        get: () => super.perform\n      }\n    });\n\n    return __awaiter(this, void 0, void 0, function* () {\n      switch (method) {\n        case \"getBlockNumber\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_blockNumber\"\n          });\n\n        case \"getGasPrice\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_gasPrice\"\n          });\n\n        case \"getBalance\":\n          // Returns base-10 result\n          return this.fetch(\"account\", {\n            action: \"balance\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getTransactionCount\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionCount\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getCode\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getCode\",\n            address: params.address,\n            tag: params.blockTag\n          });\n\n        case \"getStorageAt\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getStorageAt\",\n            address: params.address,\n            position: params.position,\n            tag: params.blockTag\n          });\n\n        case \"sendTransaction\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_sendRawTransaction\",\n            hex: params.signedTransaction\n          }, true).catch(error => {\n            return checkError(\"sendTransaction\", error, params.signedTransaction);\n          });\n\n        case \"getBlock\":\n          if (params.blockTag) {\n            return this.fetch(\"proxy\", {\n              action: \"eth_getBlockByNumber\",\n              tag: params.blockTag,\n              boolean: params.includeTransactions ? \"true\" : \"false\"\n            });\n          }\n\n          throw new Error(\"getBlock by blockHash not implemented\");\n\n        case \"getTransaction\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionByHash\",\n            txhash: params.transactionHash\n          });\n\n        case \"getTransactionReceipt\":\n          return this.fetch(\"proxy\", {\n            action: \"eth_getTransactionReceipt\",\n            txhash: params.transactionHash\n          });\n\n        case \"call\":\n          {\n            if (params.blockTag !== \"latest\") {\n              throw new Error(\"EtherscanProvider does not support blockTag for call\");\n            }\n\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_call\";\n\n            try {\n              return yield this.fetch(\"proxy\", postData, true);\n            } catch (error) {\n              return checkError(\"call\", error, params.transaction);\n            }\n          }\n\n        case \"estimateGas\":\n          {\n            const postData = getTransactionPostData(params.transaction);\n            postData.module = \"proxy\";\n            postData.action = \"eth_estimateGas\";\n\n            try {\n              return yield this.fetch(\"proxy\", postData, true);\n            } catch (error) {\n              return checkError(\"estimateGas\", error, params.transaction);\n            }\n          }\n\n        case \"getLogs\":\n          {\n            const args = {\n              action: \"getLogs\"\n            };\n\n            if (params.filter.fromBlock) {\n              args.fromBlock = checkLogTag(params.filter.fromBlock);\n            }\n\n            if (params.filter.toBlock) {\n              args.toBlock = checkLogTag(params.filter.toBlock);\n            }\n\n            if (params.filter.address) {\n              args.address = params.filter.address;\n            } // @TODO: We can handle slightly more complicated logs using the logs API\n\n\n            if (params.filter.topics && params.filter.topics.length > 0) {\n              if (params.filter.topics.length > 1) {\n                logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  topics: params.filter.topics\n                });\n              }\n\n              if (params.filter.topics.length === 1) {\n                const topic0 = params.filter.topics[0];\n\n                if (typeof topic0 !== \"string\" || topic0.length !== 66) {\n                  logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    topic0: topic0\n                  });\n                }\n\n                args.topic0 = topic0;\n              }\n            }\n\n            const logs = yield this.fetch(\"logs\", args); // Cache txHash => blockHash\n\n            let blocks = {}; // Add any missing blockHash to the logs\n\n            for (let i = 0; i < logs.length; i++) {\n              const log = logs[i];\n\n              if (log.blockHash != null) {\n                continue;\n              }\n\n              if (blocks[log.blockNumber] == null) {\n                const block = yield this.getBlock(log.blockNumber);\n\n                if (block) {\n                  blocks[log.blockNumber] = block.hash;\n                }\n              }\n\n              log.blockHash = blocks[log.blockNumber];\n            }\n\n            return logs;\n          }\n\n        case \"getEtherPrice\":\n          if (this.network.name !== \"homestead\") {\n            return 0.0;\n          }\n\n          return parseFloat((yield this.fetch(\"stats\", {\n            action: \"ethprice\"\n          })).ethusd);\n\n        default:\n          break;\n      }\n\n      return _super.perform.call(this, method, params);\n    });\n  } // Note: The `page` page parameter only allows pagination within the\n  //       10,000 window available without a page and offset parameter\n  //       Error: Result window is too large, PageNo x Offset size must\n  //              be less than or equal to 10000\n\n\n  getHistory(addressOrName, startBlock, endBlock) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const params = {\n        action: \"txlist\",\n        address: yield this.resolveName(addressOrName),\n        startblock: startBlock == null ? 0 : startBlock,\n        endblock: endBlock == null ? 99999999 : endBlock,\n        sort: \"asc\"\n      };\n      const result = yield this.fetch(\"account\", params);\n      return result.map(tx => {\n        [\"contractAddress\", \"to\"].forEach(function (key) {\n          if (tx[key] == \"\") {\n            delete tx[key];\n          }\n        });\n\n        if (tx.creates == null && tx.contractAddress != null) {\n          tx.creates = tx.contractAddress;\n        }\n\n        const item = this.formatter.transactionResponse(tx);\n\n        if (tx.timeStamp) {\n          item.timestamp = parseInt(tx.timeStamp);\n        }\n\n        return item;\n      });\n    });\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["hexlify","hexValue","isHexString","deepCopy","defineReadOnly","accessListify","fetchJson","showThrottleMessage","Logger","version","logger","BaseProvider","getTransactionPostData","transaction","result","key","value","type","gasLimit","gasPrice","maxFeePerGs","maxPriorityFeePerGas","nonce","map","set","address","storageKeys","join","getResult","status","message","error","Error","JSON","stringify","toLowerCase","indexOf","throttleRetry","getJsonResult","jsonrpc","code","data","checkLogTag","blockTag","parseInt","substring","defaultApiKey","checkError","method","errors","SERVER_ERROR","e","match","replace","throwError","CALL_EXCEPTION","body","responseText","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNPREDICTABLE_GAS_LIMIT","EtherscanProvider","constructor","network","apiKey","checkNew","new","target","getBaseUrl","name","throwArgumentError","getUrl","module","params","query","Object","keys","reduce","accum","baseUrl","getPostUrl","getPostData","apikey","fetch","post","url","payload","procFunc","emit","action","request","provider","connection","throttleSlotInterval","throttleCallback","attempt","isCommunityResource","Promise","resolve","payloadStr","headers","response","detectNetwork","perform","tag","position","hex","signedTransaction","catch","boolean","includeTransactions","txhash","transactionHash","postData","args","filter","fromBlock","toBlock","topics","length","UNSUPPORTED_OPERATION","topic0","logs","blocks","i","log","blockHash","blockNumber","block","getBlock","hash","parseFloat","ethusd","_super","call","getHistory","addressOrName","startBlock","endBlock","resolveName","startblock","endblock","sort","tx","forEach","creates","contractAddress","item","formatter","transactionResponse","timeStamp","timestamp"],"sourceRoot":"","sources":["../src.ts/etherscan-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}