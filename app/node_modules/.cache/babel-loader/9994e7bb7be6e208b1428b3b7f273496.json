{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLength = exports.decode = exports.encode = void 0;\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\n\n\nfunction encode(input) {\n  if (Array.isArray(input)) {\n    var output = [];\n\n    for (var i = 0; i < input.length; i++) {\n      output.push(encode(input[i]));\n    }\n\n    var buf = Buffer.concat(output);\n    return Buffer.concat([encodeLength(buf.length, 192), buf]);\n  } else {\n    var inputBuf = toBuffer(input);\n    return inputBuf.length === 1 && inputBuf[0] < 128 ? inputBuf : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n  }\n}\n\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\n\nfunction safeParseInt(v, base) {\n  if (v[0] === '0' && v[1] === '0') {\n    throw new Error('invalid RLP: extra zeros');\n  }\n\n  return parseInt(v, base);\n}\n\nfunction encodeLength(len, offset) {\n  if (len < 56) {\n    return Buffer.from([len + offset]);\n  } else {\n    var hexLength = intToHex(len);\n    var lLength = hexLength.length / 2;\n    var firstByte = intToHex(offset + 55 + lLength);\n    return Buffer.from(firstByte + hexLength, 'hex');\n  }\n}\n\nfunction decode(input, stream) {\n  if (stream === void 0) {\n    stream = false;\n  }\n\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n\n  var decoded = _decode(inputBuffer);\n\n  if (stream) {\n    return decoded;\n  }\n\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder');\n  }\n\n  return decoded.data;\n}\n\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\n\nfunction getLength(input) {\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n  var firstByte = inputBuffer[0];\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length;\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f;\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6;\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf;\n  } else {\n    // a list  over 55 bytes long\n    var llength = firstByte - 0xf6;\n    var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n    return llength + length_1;\n  }\n}\n\nexports.getLength = getLength;\n/** Decode an input with RLP */\n\nfunction _decode(input) {\n  var length, llength, data, innerRemainder, d;\n  var decoded = [];\n  var firstByte = input[0];\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1)\n    };\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f; // set 0x80 null to 0\n\n    if (firstByte === 0x80) {\n      data = Buffer.from([]);\n    } else {\n      data = input.slice(1, length);\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length)\n    };\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6;\n\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length');\n    }\n\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55');\n    }\n\n    data = input.slice(llength, length + llength);\n\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength)\n    };\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf;\n    innerRemainder = input.slice(1, length);\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length)\n    };\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6;\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n    var totalLength = llength + length;\n\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data');\n    }\n\n    innerRemainder = input.slice(llength, totalLength);\n\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length');\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength)\n    };\n  }\n}\n/** Check if a string is prefixed by 0x */\n\n\nfunction isHexPrefixed(str) {\n  return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\n\n\nfunction stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\n\n\nfunction intToHex(integer) {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!');\n  }\n\n  var hex = integer.toString(16);\n  return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\n\n\nfunction padToEven(a) {\n  return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\n\n\nfunction intToBuffer(integer) {\n  var hex = intToHex(integer);\n  return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\n\n\nfunction toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        return Buffer.from(v);\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([]);\n      } else {\n        return intToBuffer(v);\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([]);\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v);\n    } else if (bn_js_1.default.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n}","map":{"version":3,"mappings":"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","names":["encode","input","Array","isArray","output","i","length","push","buf","Buffer","concat","encodeLength","inputBuf","toBuffer","exports","safeParseInt","v","base","Error","parseInt","len","offset","from","hexLength","intToHex","lLength","firstByte","decode","stream","inputBuffer","decoded","_decode","remainder","data","getLength","llength","length_1","slice","toString","innerRemainder","d","totalLength","isHexPrefixed","str","stripHexPrefix","integer","hex","padToEven","a","intToBuffer","isBuffer","undefined","Uint8Array","bn_js_1","isBN","toArray"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}