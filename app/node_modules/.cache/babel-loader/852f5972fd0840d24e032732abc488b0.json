{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Address = void 0;\n\nvar assert_1 = __importDefault(require(\"assert\"));\n\nvar externals_1 = require(\"./externals\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar account_1 = require(\"./account\");\n\nvar Address =\n/** @class */\nfunction () {\n  function Address(buf) {\n    (0, assert_1.default)(buf.length === 20, 'Invalid address length');\n    this.buf = buf;\n  }\n  /**\n   * Returns the zero address.\n   */\n\n\n  Address.zero = function () {\n    return new Address((0, bytes_1.zeros)(20));\n  };\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n\n\n  Address.fromString = function (str) {\n    (0, assert_1.default)((0, account_1.isValidAddress)(str), 'Invalid address');\n    return new Address((0, bytes_1.toBuffer)(str));\n  };\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n\n\n  Address.fromPublicKey = function (pubKey) {\n    (0, assert_1.default)(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n    var buf = (0, account_1.pubToAddress)(pubKey);\n    return new Address(buf);\n  };\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n\n\n  Address.fromPrivateKey = function (privateKey) {\n    (0, assert_1.default)(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n    var buf = (0, account_1.privateToAddress)(privateKey);\n    return new Address(buf);\n  };\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n\n\n  Address.generate = function (from, nonce) {\n    (0, assert_1.default)(externals_1.BN.isBN(nonce));\n    return new Address((0, account_1.generateAddress)(from.buf, nonce.toArrayLike(Buffer)));\n  };\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n\n\n  Address.generate2 = function (from, salt, initCode) {\n    (0, assert_1.default)(Buffer.isBuffer(salt));\n    (0, assert_1.default)(Buffer.isBuffer(initCode));\n    return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n  };\n  /**\n   * Is address equal to another.\n   */\n\n\n  Address.prototype.equals = function (address) {\n    return this.buf.equals(address.buf);\n  };\n  /**\n   * Is address zero.\n   */\n\n\n  Address.prototype.isZero = function () {\n    return this.equals(Address.zero());\n  };\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n\n\n  Address.prototype.isPrecompileOrSystemAddress = function () {\n    var addressBN = new externals_1.BN(this.buf);\n    var rangeMin = new externals_1.BN(0);\n    var rangeMax = new externals_1.BN('ffff', 'hex');\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n  };\n  /**\n   * Returns hex encoding of address.\n   */\n\n\n  Address.prototype.toString = function () {\n    return '0x' + this.buf.toString('hex');\n  };\n  /**\n   * Returns Buffer representation of address.\n   */\n\n\n  Address.prototype.toBuffer = function () {\n    return Buffer.from(this.buf);\n  };\n\n  return Address;\n}();\n\nexports.Address = Address;","map":{"version":3,"mappings":"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","names":["buf","length","Address","str","pubKey","Buffer","isBuffer","privateKey","from","nonce","externals_1","isBN","toArrayLike","salt","initCode","address","equals","zero","addressBN","rangeMin","rangeMax","gte","lte","toString","exports"],"sourceRoot":"","sources":["../src/address.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}