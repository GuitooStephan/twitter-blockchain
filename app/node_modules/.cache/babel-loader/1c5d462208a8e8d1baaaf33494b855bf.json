{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar types_1 = require(\"./types\");\n\nfunction checkMaxInitCodeSize(common, length) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n  }\n}\n\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\n\nvar AccessLists =\n/** @class */\nfunction () {\n  function AccessLists() {}\n\n  AccessLists.getAccessListData = function (accessList) {\n    var AccessListJSON;\n    var bufferAccessList;\n\n    if (accessList && (0, types_1.isAccessList)(accessList)) {\n      AccessListJSON = accessList;\n      var newAccessList = [];\n\n      for (var i = 0; i < accessList.length; i++) {\n        var item = accessList[i];\n        var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n        var storageItems = [];\n\n        for (var index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n        }\n\n        newAccessList.push([addressBuffer, storageItems]);\n      }\n\n      bufferAccessList = newAccessList;\n    } else {\n      bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : []; // build the JSON\n\n      var json = [];\n\n      for (var i = 0; i < bufferAccessList.length; i++) {\n        var data = bufferAccessList[i];\n        var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n        var storageKeys = [];\n\n        for (var item = 0; item < data[1].length; item++) {\n          storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n        }\n\n        var jsonItem = {\n          address: address,\n          storageKeys: storageKeys\n        };\n        json.push(jsonItem);\n      }\n\n      AccessListJSON = json;\n    }\n\n    return {\n      AccessListJSON: AccessListJSON,\n      accessList: bufferAccessList\n    };\n  };\n\n  AccessLists.verifyAccessList = function (accessList) {\n    for (var key = 0; key < accessList.length; key++) {\n      var accessListItem = accessList[key];\n      var address = accessListItem[0];\n      var storageSlots = accessListItem[1];\n\n      if (accessListItem[2] !== undefined) {\n        throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n      }\n\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n      }\n\n      for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n        }\n      }\n    }\n  };\n\n  AccessLists.getAccessListJSON = function (accessList) {\n    var accessListJSON = [];\n\n    for (var index = 0; index < accessList.length; index++) {\n      var item = accessList[index];\n      var JSONItem = {\n        address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n        storageKeys: []\n      };\n      var storageSlots = item[1];\n\n      for (var slot = 0; slot < storageSlots.length; slot++) {\n        var storageSlot = storageSlots[slot];\n        JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n      }\n\n      accessListJSON.push(JSONItem);\n    }\n\n    return accessListJSON;\n  };\n\n  AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n    var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n    var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n    var slots = 0;\n\n    for (var index = 0; index < accessList.length; index++) {\n      var item = accessList[index];\n      var storageSlots = item[1];\n      slots += storageSlots.length;\n    }\n\n    var addresses = accessList.length;\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n  };\n\n  return AccessLists;\n}();\n\nexports.AccessLists = AccessLists;","map":{"version":3,"mappings":"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","names":["checkMaxInitCodeSize","common","length","param","Error","concat","exports","AccessLists","accessList","AccessListJSON","bufferAccessList","newAccessList","i","item","addressBuffer","address","storageItems","index","storageKeys","push","json","data","jsonItem","key","accessListItem","storageSlots","undefined","storageSlot","accessListJSON","JSONItem","toString","slot","accessListStorageKeyCost","accessListAddressCost","slots","addresses"],"sourceRoot":"","sources":["../src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}