{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\n\nvar secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\n\nvar externals_1 = require(\"./externals\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar types_1 = require(\"./types\");\n\nfunction ecsign(msgHash, privateKey, chainId) {\n  var _a = (0, secp256k1_1.ecdsaSign)(msgHash, privateKey),\n      signature = _a.signature,\n      recovery = _a.recid;\n\n  var r = Buffer.from(signature.slice(0, 32));\n  var s = Buffer.from(signature.slice(32, 64));\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n\n    var v_1 = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n    return {\n      r: r,\n      s: s,\n      v: v_1\n    };\n  }\n\n  var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n  var v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n}\n\nexports.ecsign = ecsign;\n\nfunction calculateSigRecovery(v, chainId) {\n  var vBN = (0, types_1.toType)(v, types_1.TypeOutput.BN);\n\n  if (!chainId) {\n    return vBN.subn(27);\n  }\n\n  var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n  return vBN.sub(chainIdBN.muln(2).addn(35));\n}\n\nfunction isValidSigRecovery(recovery) {\n  var rec = new externals_1.BN(recovery);\n  return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\n\n\nvar ecrecover = function (msgHash, v, r, s, chainId) {\n  var signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = (0, secp256k1_1.ecdsaRecover)(signature, recovery.toNumber(), msgHash);\n  return Buffer.from((0, secp256k1_1.publicKeyConvert)(senderPubKey, false).slice(1));\n};\n\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\n\nvar toRpcSig = function (v, r, s, chainId) {\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n\n  return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\n\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\n\nvar toCompactSig = function (v, r, s, chainId) {\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var vn = (0, types_1.toType)(v, types_1.TypeOutput.Number);\n  var ss = s;\n\n  if (vn > 28 && vn % 2 === 1 || vn === 1 || vn === 28) {\n    ss = Buffer.from(s);\n    ss[0] |= 0x80;\n  }\n\n  return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\n\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\n\nvar fromRpcSig = function (sig) {\n  var buf = (0, bytes_1.toBuffer)(sig);\n  var r;\n  var s;\n  var v;\n\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32);\n    s = buf.slice(32, 64);\n    v = (0, bytes_1.bufferToInt)(buf.slice(64));\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32);\n    s = buf.slice(32, 64);\n    v = (0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7;\n    s[0] &= 0x7f;\n  } else {\n    throw new Error('Invalid signature length');\n  } // support both versions of `eth_sign` responses\n\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: r,\n    s: s\n  };\n};\n\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\n\nvar isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n  if (homesteadOrLater === void 0) {\n    homesteadOrLater = true;\n  }\n\n  var SECP256K1_N_DIV_2 = new externals_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new externals_1.BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false;\n  }\n\n  var rBN = new externals_1.BN(r);\n  var sBN = new externals_1.BN(s);\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\n\nvar hashPersonalMessage = function (message) {\n  (0, helpers_1.assertIsBuffer)(message);\n  var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\".concat(message.length), 'utf-8');\n  return (0, hash_1.keccak)(Buffer.concat([prefix, message]));\n};\n\nexports.hashPersonalMessage = hashPersonalMessage;","map":{"version":3,"mappings":"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","names":["ecsign","msgHash","privateKey","chainId","signature","recovery","r","Buffer","from","slice","s","Number","isSafeInteger","Error","v_1","v","chainIdBN","types_1","BN","muln","addn","toArrayLike","exports","calculateSigRecovery","vBN","subn","sub","isValidSigRecovery","rec","externals_1","eqn","ecrecover","concat","senderPubKey","toNumber","toRpcSig","toCompactSig","vn","ss","fromRpcSig","sig","buf","length","isValidSignature","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","hashPersonalMessage","message","prefix"],"sourceRoot":"","sources":["../src/signature.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}